Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements_group -> BEGIN statements END
Rule 3     statements_group -> inner_statement
Rule 4     inner_statement -> declaration
Rule 5     inner_statement -> assignment
Rule 6     inner_statement -> while
Rule 7     inner_statement -> if
Rule 8     inner_statement -> command
Rule 9     inner_statement -> function
Rule 10    inner_statement -> call
Rule 11    inner_statement -> RETURN expression
Rule 12    inner_statement -> empty
Rule 13    statements -> statements statement
Rule 14    statements -> statement
Rule 15    statement -> declaration NEWLINE
Rule 16    statement -> comment NEWLINE
Rule 17    statement -> assignment NEWLINE
Rule 18    statement -> while NEWLINE
Rule 19    statement -> if NEWLINE
Rule 20    statement -> command NEWLINE
Rule 21    statement -> function NEWLINE
Rule 22    statement -> call NEWLINE
Rule 23    statement -> RETURN expression NEWLINE
Rule 24    statement -> empty NEWLINE
Rule 25    statement -> errors NEWLINE
Rule 26    statement -> errors
Rule 27    declaration -> type variables
Rule 28    comment -> COMMENT any
Rule 29    any -> any VARIABLE
Rule 30    any -> VARIABLE
Rule 31    type -> INTEGER
Rule 32    type -> STRING
Rule 33    type -> BOOL
Rule 34    type -> VECTOR OF type
Rule 35    type -> errors
Rule 36    variables -> variable COMMA variables
Rule 37    variables -> assignment COMMA variables
Rule 38    variables -> variable
Rule 39    variables -> assignment
Rule 40    assignment -> variable ASSIGNMENT expression
Rule 41    variable -> VARIABLE indexing
Rule 42    variable -> VARIABLE
Rule 43    indexing -> L_QBRACKET expression R_QBRACKET indexing
Rule 44    indexing -> L_QBRACKET expression R_QBRACKET
Rule 45    expression -> variable
Rule 46    expression -> const
Rule 47    expression -> qstring
Rule 48    expression -> math_expression
Rule 49    expression -> robot_command
Rule 50    expression -> converting_command
Rule 51    expression -> vector_pop
Rule 52    expression -> call
Rule 53    qstring -> DOUBLE_QUOTE string DOUBLE_QUOTE
Rule 54    qstring -> QUOTE string QUOTE
Rule 55    string -> VARIABLE string
Rule 56    string -> DECIMAL string
Rule 57    string -> FALSE string
Rule 58    string -> TRUE string
Rule 59    string -> FALSE
Rule 60    string -> TRUE
Rule 61    string -> DECIMAL
Rule 62    string -> VARIABLE
Rule 63    const -> TRUE
Rule 64    const -> FALSE
Rule 65    const -> UNDEFINED
Rule 66    const -> DECIMAL
Rule 67    const -> EXIT
Rule 68    const -> WOOD
Rule 69    const -> STEEL
Rule 70    const -> GLASS
Rule 71    const -> CONCRETE
Rule 72    const -> PLASTIC
Rule 73    math_expression -> expression PLUS expression
Rule 74    math_expression -> expression MINUS expression
Rule 75    math_expression -> MINUS expression
Rule 76    math_expression -> expression LESS expression
Rule 77    math_expression -> expression GREATER expression
Rule 78    math_expression -> expression EQ expression
Rule 79    math_expression -> expression NOTEQ expression
Rule 80    while -> DO statements_group UNTIL expression
Rule 81    if -> IF expression THEN statements_group
Rule 82    if -> IF expression THEN statements_group ELSE statements_group
Rule 83    function -> FUNCTION OF type VARIABLE LBRACKET parameters_f RBRACKET statements_group
Rule 84    function -> FUNCTION OF type VARIABLE BRACKETS statements_group
Rule 85    command -> vector_command
Rule 86    command -> robot_command
Rule 87    converting_command -> expression TO type
Rule 88    converting_command -> expression TO expression
Rule 89    converting_command -> expression TO vector_of
Rule 90    vector_of -> VECTOR OF vector_of
Rule 91    vector_of -> VECTOR
Rule 92    vector_command -> variable PUSH BACK expression
Rule 93    vector_command -> variable PUSH FRONT expression
Rule 94    vector_pop -> variable POP BACK
Rule 95    vector_pop -> variable POP FRONT
Rule 96    robot_command -> LEFT
Rule 97    robot_command -> RIGHT
Rule 98    robot_command -> FORWARD
Rule 99    robot_command -> BACK
Rule 100   robot_command -> ROTATE_RIGHT
Rule 101   robot_command -> ROTATE_LEFT
Rule 102   robot_command -> LMS
Rule 103   robot_command -> REFLECT
Rule 104   robot_command -> DRILL
Rule 105   call -> VARIABLE LBRACKET parameters RBRACKET
Rule 106   call -> VARIABLE BRACKETS
Rule 107   empty -> <empty>
Rule 108   parameters -> parameters COMMA parameter
Rule 109   parameters -> parameter
Rule 110   parameters -> CONTINUE
Rule 111   parameter -> expression
Rule 112   parameter -> VARIABLE EQ expression
Rule 113   errors -> errors error
Rule 114   errors -> error

Terminals, with rules where they appear

ASSIGNMENT           : 40
BACK                 : 92 94 99
BEGIN                : 2
BOOL                 : 33
BRACKETS             : 84 106
COMMA                : 36 37 108
COMMENT              : 28
CONCRETE             : 71
CONTINUE             : 110
DECIMAL              : 56 61 66
DO                   : 80
DOUBLE_QUOTE         : 53 53
DRILL                : 104
ELSE                 : 82
END                  : 2
EQ                   : 78 112
EXIT                 : 67
FALSE                : 57 59 64
FORWARD              : 98
FRONT                : 93 95
FUNCTION             : 83 84
GLASS                : 70
GREATER              : 77
IF                   : 81 82
INTEGER              : 31
LBRACKET             : 83 105
LEFT                 : 96
LESS                 : 76
LMS                  : 102
L_QBRACKET           : 43 44
MINUS                : 74 75
NEWLINE              : 15 16 17 18 19 20 21 22 23 24 25
NOTEQ                : 79
OF                   : 34 83 84 90
PLASTIC              : 72
PLUS                 : 73
POP                  : 94 95
PUSH                 : 92 93
QUOTE                : 54 54
RBRACKET             : 83 105
REFLECT              : 103
RETURN               : 11 23
RIGHT                : 97
ROTATE_LEFT          : 101
ROTATE_RIGHT         : 100
R_QBRACKET           : 43 44
STEEL                : 69
STRING               : 32
THEN                 : 81 82
TO                   : 87 88 89
TRUE                 : 58 60 63
UNDEFINED            : 65
UNTIL                : 80
VARIABLE             : 29 30 41 42 55 62 83 84 105 106 112
VECTOR               : 34 90 91
WOOD                 : 68
error                : 113 114

Nonterminals, with rules where they appear

any                  : 28 29
assignment           : 5 17 37 39
call                 : 10 22 52
command              : 8 20
comment              : 16
const                : 46
converting_command   : 50
declaration          : 4 15
empty                : 12 24
errors               : 25 26 35 113
expression           : 11 23 40 43 44 73 73 74 74 75 76 76 77 77 78 78 79 79 80 81 82 87 88 88 89 92 93 111 112
function             : 9 21
if                   : 7 19
indexing             : 41 43
inner_statement      : 3
math_expression      : 48
parameter            : 108 109
parameters           : 105 108
parameters_f         : 83
program              : 0
qstring              : 47
robot_command        : 49 86
statement            : 13 14
statements           : 1 2 13
statements_group     : 80 81 82 82 83 84
string               : 53 54 55 56 57 58
type                 : 27 34 83 84 87
variable             : 36 38 40 45 92 93 94 95
variables            : 27 36 37
vector_command       : 85
vector_of            : 89 90
vector_pop           : 51
while                : 6 18

