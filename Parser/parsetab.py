
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGNMENT BACK BEGIN BOOL BRACKETS COMMA COMMENT CONCRETE CONTINUE DECIMAL DO DOUBLE_QUOTE DRILL ELSE END EQ EXIT FALSE FORWARD FRONT FUNCTION GLASS GREATER IF INTEGER LBRACKET LEFT LESS LMS L_QBRACKET MINUS NEWLINE NOTEQ OF PLASTIC PLUS POP PUSH QUOTE RBRACKET REFLECT RETURN RIGHT ROTATE_LEFT ROTATE_RIGHT R_QBRACKET STEEL STRING THEN TO TRUE UNDEFINED UNTIL VARIABLE VECTOR WOODprogram : statementsstatements_group : BEGIN statements END\n                            | inner_statementinner_statement : declaration\n                     | assignment\n                     | while\n                     | if\n                     | command\n                     | function\n                     | call\n                     | RETURN expression\n                     | emptystatements : statements statement\n                      | statementstatement : declaration NEWLINE\n                     | comment NEWLINE\n                     | assignment NEWLINE\n                     | while NEWLINE\n                     | if NEWLINE\n                     | command NEWLINE\n                     | function NEWLINE\n                     | call NEWLINE\n                     | RETURN expression NEWLINE\n                     | empty NEWLINEstatement : errors NEWLINEstatement : errorsdeclaration : type variablescomment : COMMENT anyany : any VARIABLE\n               | VARIABLEtype : INTEGER\n                | STRING\n                | BOOL\n                | VECTOR OF type\n        variables : variable COMMA variables\n                | assignment COMMA variables\n                | variable\n                | assignmentassignment : variable ASSIGNMENT expressionvariable : VARIABLE L_QBRACKET expression R_QBRACKET\n                    | VARIABLEexpression : variable\n                      | const\n                      | qstring\n                      | math_expression\n                      | robot_command\n                      | vector_pop\n                      | callqstring : DOUBLE_QUOTE string DOUBLE_QUOTE\n                   | QUOTE string QUOTEstring : string VARIABLE\n                   | VARIABLEconst : TRUE\n                 | FALSE\n                 | UNDEFINED\n                 | DECIMAL\n                 | EXIT\n                 | WOOD\n                 | STEEL\n                 | GLASS\n                 | CONCRETE\n                 | PLASTICmath_expression : expression PLUS expression\n                           | expression MINUS expression\n                           | MINUS expression\n                           | expression LESS expression\n                           | expression GREATER expression\n                           | expression EQ expression\n                           | expression NOTEQ expressionwhile : DO statements_group UNTIL expressionif : IF expression THEN statements_group\n              | IF expression THEN statements_group ELSE statements_groupfunction : FUNCTION OF type VARIABLE LBRACKET parameters RBRACKET statements_group\n                    | FUNCTION OF type VARIABLE BRACKETS statements_groupcommand : vector_command\n                   | robot_command\n                   | converting_commandconverting_command : expression TO type\n                              | expression TO expressionvector_command : variable PUSH BACK expression\n                          | variable PUSH FRONT expressionvector_pop : variable POP BACK\n                      | variable POP FRONTrobot_command : LEFT\n                    | RIGHT\n                    | FORWARD\n                    | BACK\n                    | ROTATE_RIGHT\n                    | ROTATE_LEFT\n                    | LMS\n                    | REFLECT\n                    | DRILLcall : VARIABLE LBRACKET parameters RBRACKET\n                | VARIABLE BRACKETSempty : parameters : parameters COMMA parameter\n                      | parameter\n                      | parameters CONTINUEparameter : expression\n                     | VARIABLE EQ expressionerrors : errors error\n        | error'
    
_lr_action_items = {'RETURN':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,78,79,80,91,112,130,132,156,158,164,],[12,12,-14,-26,100,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-101,12,-23,12,100,100,100,100,]),'COMMENT':([0,2,3,15,26,57,58,59,60,61,62,63,64,65,78,79,80,91,112,130,],[17,17,-14,-26,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-101,17,-23,17,]),'DO':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,78,79,80,91,112,130,132,156,158,164,],[19,19,-14,-26,19,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-101,19,-23,19,19,19,19,19,]),'IF':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,78,79,80,91,112,130,132,156,158,164,],[20,20,-14,-26,20,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-101,20,-23,20,20,20,20,20,]),'FUNCTION':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,78,79,80,91,112,130,132,156,158,164,],[24,24,-14,-26,24,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-101,24,-23,24,24,24,24,24,]),'VARIABLE':([0,2,3,12,15,16,17,19,20,26,27,28,29,54,55,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,85,86,87,91,100,104,106,108,109,110,112,121,122,123,125,126,129,130,132,133,139,141,151,153,156,157,158,164,],[25,25,-14,70,-26,84,86,25,70,-102,-31,-32,-33,109,109,70,-13,-15,-16,-17,-18,-19,-20,-21,-22,70,70,70,70,70,70,70,-24,-25,-101,123,-30,70,25,70,134,70,141,-52,141,-23,84,84,-29,70,70,70,25,25,150,-34,-51,70,134,25,134,25,25,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,14,15,21,22,23,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,101,105,111,112,113,114,115,116,117,118,119,120,123,124,127,128,130,131,132,139,140,142,143,144,145,146,147,148,149,152,155,156,158,161,163,164,165,],[-95,-95,-14,58,59,60,61,62,63,64,65,78,79,-75,-76,-77,-102,-31,-32,-33,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-13,-15,-16,-17,-18,-19,-20,-21,-22,112,-42,-46,-48,-41,-24,-25,-101,-27,-37,-38,-41,-28,-30,-95,-3,-4,-5,-6,-7,-8,-9,-10,-12,-94,-65,-23,-79,-78,-63,-64,-66,-67,-68,-69,-29,-39,-82,-83,-95,-11,-95,-34,-49,-50,-35,-36,-80,-81,-70,-2,-71,-93,-40,-95,-95,-72,-74,-95,-73,]),'error':([0,2,3,15,26,57,58,59,60,61,62,63,64,65,78,79,80,91,112,130,],[26,26,-14,80,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-101,26,-23,26,]),'INTEGER':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,103,107,112,130,132,156,158,164,],[27,27,-14,-26,27,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,27,-24,-25,-101,27,27,27,-23,27,27,27,27,27,]),'STRING':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,103,107,112,130,132,156,158,164,],[28,28,-14,-26,28,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,28,-24,-25,-101,28,28,28,-23,28,28,28,28,28,]),'BOOL':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,103,107,112,130,132,156,158,164,],[29,29,-14,-26,29,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,29,-24,-25,-101,29,29,29,-23,29,29,29,29,29,]),'VECTOR':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,103,107,112,130,132,156,158,164,],[30,30,-14,-26,30,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,30,-24,-25,-101,30,30,30,-23,30,30,30,30,30,]),'LEFT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[32,32,-14,32,-26,32,32,-102,32,-13,-15,-16,-17,-18,-19,-20,-21,-22,32,32,32,32,32,32,32,-24,-25,-101,32,32,32,32,32,-23,32,32,32,32,32,32,32,32,32,32,32,]),'RIGHT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[33,33,-14,33,-26,33,33,-102,33,-13,-15,-16,-17,-18,-19,-20,-21,-22,33,33,33,33,33,33,33,-24,-25,-101,33,33,33,33,33,-23,33,33,33,33,33,33,33,33,33,33,33,]),'FORWARD':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[34,34,-14,34,-26,34,34,-102,34,-13,-15,-16,-17,-18,-19,-20,-21,-22,34,34,34,34,34,34,34,-24,-25,-101,34,34,34,34,34,-23,34,34,34,34,34,34,34,34,34,34,34,]),'BACK':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,88,89,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[31,31,-14,31,-26,31,31,-102,31,-13,-15,-16,-17,-18,-19,-20,-21,-22,31,31,31,31,31,31,31,-24,-25,-101,31,125,127,31,31,31,31,-23,31,31,31,31,31,31,31,31,31,31,31,]),'ROTATE_RIGHT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[35,35,-14,35,-26,35,35,-102,35,-13,-15,-16,-17,-18,-19,-20,-21,-22,35,35,35,35,35,35,35,-24,-25,-101,35,35,35,35,35,-23,35,35,35,35,35,35,35,35,35,35,35,]),'ROTATE_LEFT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[36,36,-14,36,-26,36,36,-102,36,-13,-15,-16,-17,-18,-19,-20,-21,-22,36,36,36,36,36,36,36,-24,-25,-101,36,36,36,36,36,-23,36,36,36,36,36,36,36,36,36,36,36,]),'LMS':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[37,37,-14,37,-26,37,37,-102,37,-13,-15,-16,-17,-18,-19,-20,-21,-22,37,37,37,37,37,37,37,-24,-25,-101,37,37,37,37,37,-23,37,37,37,37,37,37,37,37,37,37,37,]),'REFLECT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[38,38,-14,38,-26,38,38,-102,38,-13,-15,-16,-17,-18,-19,-20,-21,-22,38,38,38,38,38,38,38,-24,-25,-101,38,38,38,38,38,-23,38,38,38,38,38,38,38,38,38,38,38,]),'DRILL':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[39,39,-14,39,-26,39,39,-102,39,-13,-15,-16,-17,-18,-19,-20,-21,-22,39,39,39,39,39,39,39,-24,-25,-101,39,39,39,39,39,-23,39,39,39,39,39,39,39,39,39,39,39,]),'TRUE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[44,44,-14,44,-26,44,44,-102,44,-13,-15,-16,-17,-18,-19,-20,-21,-22,44,44,44,44,44,44,44,-24,-25,-101,44,44,44,44,44,-23,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[45,45,-14,45,-26,45,45,-102,45,-13,-15,-16,-17,-18,-19,-20,-21,-22,45,45,45,45,45,45,45,-24,-25,-101,45,45,45,45,45,-23,45,45,45,45,45,45,45,45,45,45,45,]),'UNDEFINED':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[46,46,-14,46,-26,46,46,-102,46,-13,-15,-16,-17,-18,-19,-20,-21,-22,46,46,46,46,46,46,46,-24,-25,-101,46,46,46,46,46,-23,46,46,46,46,46,46,46,46,46,46,46,]),'DECIMAL':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[47,47,-14,47,-26,47,47,-102,47,-13,-15,-16,-17,-18,-19,-20,-21,-22,47,47,47,47,47,47,47,-24,-25,-101,47,47,47,47,47,-23,47,47,47,47,47,47,47,47,47,47,47,]),'EXIT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[48,48,-14,48,-26,48,48,-102,48,-13,-15,-16,-17,-18,-19,-20,-21,-22,48,48,48,48,48,48,48,-24,-25,-101,48,48,48,48,48,-23,48,48,48,48,48,48,48,48,48,48,48,]),'WOOD':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[49,49,-14,49,-26,49,49,-102,49,-13,-15,-16,-17,-18,-19,-20,-21,-22,49,49,49,49,49,49,49,-24,-25,-101,49,49,49,49,49,-23,49,49,49,49,49,49,49,49,49,49,49,]),'STEEL':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[50,50,-14,50,-26,50,50,-102,50,-13,-15,-16,-17,-18,-19,-20,-21,-22,50,50,50,50,50,50,50,-24,-25,-101,50,50,50,50,50,-23,50,50,50,50,50,50,50,50,50,50,50,]),'GLASS':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[51,51,-14,51,-26,51,51,-102,51,-13,-15,-16,-17,-18,-19,-20,-21,-22,51,51,51,51,51,51,51,-24,-25,-101,51,51,51,51,51,-23,51,51,51,51,51,51,51,51,51,51,51,]),'CONCRETE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[52,52,-14,52,-26,52,52,-102,52,-13,-15,-16,-17,-18,-19,-20,-21,-22,52,52,52,52,52,52,52,-24,-25,-101,52,52,52,52,52,-23,52,52,52,52,52,52,52,52,52,52,52,]),'PLASTIC':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,112,125,126,129,130,132,151,153,156,157,158,164,],[53,53,-14,53,-26,53,53,-102,53,-13,-15,-16,-17,-18,-19,-20,-21,-22,53,53,53,53,53,53,53,-24,-25,-101,53,53,53,53,53,-23,53,53,53,53,53,53,53,53,53,53,53,]),'DOUBLE_QUOTE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,108,109,112,125,126,129,130,132,141,151,153,156,157,158,164,],[54,54,-14,54,-26,54,54,-102,54,-13,-15,-16,-17,-18,-19,-20,-21,-22,54,54,54,54,54,54,54,-24,-25,-101,54,54,54,54,54,140,-52,-23,54,54,54,54,54,-51,54,54,54,54,54,54,]),'QUOTE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,104,106,109,110,112,125,126,129,130,132,141,151,153,156,157,158,164,],[55,55,-14,55,-26,55,55,-102,55,-13,-15,-16,-17,-18,-19,-20,-21,-22,55,55,55,55,55,55,55,-24,-25,-101,55,55,55,55,55,-52,142,-23,55,55,55,55,55,-51,55,55,55,55,55,55,]),'MINUS':([0,2,3,11,12,13,15,18,19,20,22,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,91,99,100,102,104,105,106,111,112,113,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,134,137,138,140,142,145,146,147,151,152,153,155,156,157,158,159,164,],[56,56,-14,-48,56,73,-26,-42,56,56,-46,-41,-102,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,56,-13,-15,-16,-17,-18,-19,-20,-21,-22,73,-42,-46,-48,-41,56,56,56,56,56,56,56,-24,-25,-101,56,56,-48,56,73,56,-94,56,73,-23,73,73,73,73,73,73,73,73,56,56,-82,-83,56,56,73,56,-41,73,73,-49,-50,73,73,73,56,-93,56,-40,56,56,56,73,56,]),'$end':([1,2,3,15,26,57,58,59,60,61,62,63,64,65,78,79,80,112,],[0,-1,-14,-26,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-101,-23,]),'END':([3,15,26,57,58,59,60,61,62,63,64,65,78,79,80,112,130,],[-14,-26,-102,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-101,-23,148,]),'TO':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,99,105,111,115,116,117,118,119,120,127,128,140,142,152,155,],[-48,71,-42,-46,-41,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-42,-46,-48,-41,-48,-94,-65,-63,-64,-66,-67,-68,-69,-82,-83,-49,-50,-93,-40,]),'PLUS':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,102,105,111,113,115,116,117,118,119,120,124,127,128,131,134,137,138,140,142,145,146,147,152,155,159,],[-48,72,-42,-46,-41,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,72,-42,-46,-48,-41,-48,72,-94,72,72,72,72,72,72,72,72,72,-82,-83,72,-41,72,72,-49,-50,72,72,72,-93,-40,72,]),'LESS':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,102,105,111,113,115,116,117,118,119,120,124,127,128,131,134,137,138,140,142,145,146,147,152,155,159,],[-48,74,-42,-46,-41,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,74,-42,-46,-48,-41,-48,74,-94,74,74,74,74,74,74,74,74,74,-82,-83,74,-41,74,74,-49,-50,74,74,74,-93,-40,74,]),'GREATER':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,102,105,111,113,115,116,117,118,119,120,124,127,128,131,134,137,138,140,142,145,146,147,152,155,159,],[-48,75,-42,-46,-41,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,75,-42,-46,-48,-41,-48,75,-94,75,75,75,75,75,75,75,75,75,-82,-83,75,-41,75,75,-49,-50,75,75,75,-93,-40,75,]),'EQ':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,102,105,111,113,115,116,117,118,119,120,124,127,128,131,134,137,138,140,142,145,146,147,152,155,159,],[-48,76,-42,-46,-41,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,76,-42,-46,-48,-41,-48,76,-94,76,76,76,76,76,76,76,76,76,-82,-83,76,151,76,76,-49,-50,76,76,76,-93,-40,76,]),'NOTEQ':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,102,105,111,113,115,116,117,118,119,120,124,127,128,131,134,137,138,140,142,145,146,147,152,155,159,],[-48,77,-42,-46,-41,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,77,-42,-46,-48,-41,-48,77,-94,77,77,77,77,77,77,77,77,77,-82,-83,77,-41,77,77,-49,-50,77,77,77,-93,-40,77,]),'ASSIGNMENT':([18,25,82,84,155,],[87,-41,87,-41,-40,]),'PUSH':([18,25,155,],[88,-41,-40,]),'POP':([18,25,67,70,134,155,],[89,-41,89,-41,-41,-40,]),'BEGIN':([19,132,156,158,164,],[91,91,91,91,91,]),'UNTIL':([19,21,22,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,81,82,83,84,90,92,93,94,95,96,97,98,99,101,105,111,113,114,115,116,117,118,119,120,124,127,128,131,132,139,140,142,143,144,145,146,147,148,149,152,155,156,158,161,163,164,165,],[-95,-75,-76,-77,-31,-32,-33,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-42,-46,-48,-41,-27,-37,-38,-41,129,-3,-4,-5,-6,-7,-8,-9,-10,-12,-94,-65,-79,-78,-63,-64,-66,-67,-68,-69,-39,-82,-83,-11,-95,-34,-49,-50,-35,-36,-80,-81,-70,-2,-71,-93,-40,-95,-95,-72,-74,-95,-73,]),'ELSE':([21,22,23,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,81,82,83,84,92,93,94,95,96,97,98,99,101,105,111,113,114,115,116,117,118,119,120,124,127,128,131,132,139,140,142,143,144,145,146,147,148,149,152,155,156,158,161,163,164,165,],[-75,-76,-77,-31,-32,-33,-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-42,-46,-48,-41,-27,-37,-38,-41,-3,-4,-5,-6,-7,-8,-9,-10,-12,-94,-65,-79,-78,-63,-64,-66,-67,-68,-69,-39,-82,-83,-11,-95,-34,-49,-50,-35,-36,-80,-81,-70,-2,156,-93,-40,-95,-95,-72,-74,-95,-73,]),'OF':([24,30,],[103,107,]),'LBRACKET':([25,70,134,150,],[104,104,104,157,]),'BRACKETS':([25,70,134,150,],[105,105,105,158,]),'L_QBRACKET':([25,70,84,134,],[106,106,106,106,]),'THEN':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,102,105,111,115,116,117,118,119,120,127,128,140,142,152,155,],[-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-42,-46,-48,-41,132,-94,-65,-63,-64,-66,-67,-68,-69,-82,-83,-49,-50,-93,-40,]),'COMMA':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,82,83,84,105,111,115,116,117,118,119,120,124,127,128,134,135,136,137,140,142,152,154,155,159,160,162,],[-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-42,-46,-48,-41,121,122,-41,-94,-65,-63,-64,-66,-67,-68,-69,-39,-82,-83,-41,153,-97,-99,-49,-50,-93,-98,-40,-100,-96,153,]),'RBRACKET':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,105,111,115,116,117,118,119,120,127,128,134,135,136,137,140,142,152,154,155,159,160,162,],[-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-42,-46,-48,-41,-94,-65,-63,-64,-66,-67,-68,-69,-82,-83,-41,152,-97,-99,-49,-50,-93,-98,-40,-100,-96,164,]),'CONTINUE':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,105,111,115,116,117,118,119,120,127,128,134,135,136,137,140,142,152,154,155,159,160,162,],[-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-42,-46,-48,-41,-94,-65,-63,-64,-66,-67,-68,-69,-82,-83,-41,154,-97,-99,-49,-50,-93,-98,-40,-100,-96,154,]),'R_QBRACKET':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,105,111,115,116,117,118,119,120,127,128,138,140,142,152,155,],[-87,-84,-85,-86,-88,-89,-90,-91,-92,-43,-44,-45,-47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-42,-46,-48,-41,-94,-65,-63,-64,-66,-67,-68,-69,-82,-83,155,-49,-50,-93,-40,]),'FRONT':([88,89,],[126,128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,91,],[2,130,]),'statement':([0,2,91,130,],[3,57,3,57,]),'declaration':([0,2,19,91,130,132,156,158,164,],[4,4,93,4,4,93,93,93,93,]),'comment':([0,2,91,130,],[5,5,5,5,]),'assignment':([0,2,16,19,91,121,122,130,132,156,158,164,],[6,6,83,94,6,83,83,6,94,94,94,94,]),'while':([0,2,19,91,130,132,156,158,164,],[7,7,95,7,7,95,95,95,95,]),'if':([0,2,19,91,130,132,156,158,164,],[8,8,96,8,8,96,96,96,96,]),'command':([0,2,19,91,130,132,156,158,164,],[9,9,97,9,9,97,97,97,97,]),'function':([0,2,19,91,130,132,156,158,164,],[10,10,98,10,10,98,98,98,98,]),'call':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,104,106,125,126,129,130,132,151,153,156,157,158,164,],[11,11,69,99,69,69,69,69,69,69,69,69,69,69,11,69,69,69,69,69,69,11,99,69,69,99,69,99,99,]),'expression':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,104,106,125,126,129,130,132,151,153,156,157,158,164,],[13,13,66,13,102,111,113,115,116,117,118,119,120,124,13,131,137,138,145,146,147,13,13,159,137,13,137,13,13,]),'empty':([0,2,19,91,130,132,156,158,164,],[14,14,101,14,14,101,101,101,101,]),'errors':([0,2,91,130,],[15,15,15,15,]),'type':([0,2,19,71,91,103,107,130,132,156,158,164,],[16,16,16,114,16,133,139,16,16,16,16,16,]),'variable':([0,2,12,16,19,20,56,71,72,73,74,75,76,77,87,91,100,104,106,121,122,125,126,129,130,132,151,153,156,157,158,164,],[18,18,67,82,18,67,67,67,67,67,67,67,67,67,67,18,67,67,67,82,82,67,67,67,18,18,67,67,18,67,18,18,]),'vector_command':([0,2,19,91,130,132,156,158,164,],[21,21,21,21,21,21,21,21,21,]),'robot_command':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,104,106,125,126,129,130,132,151,153,156,157,158,164,],[22,22,68,22,68,68,68,68,68,68,68,68,68,68,22,68,68,68,68,68,68,22,22,68,68,22,68,22,22,]),'converting_command':([0,2,19,91,130,132,156,158,164,],[23,23,23,23,23,23,23,23,23,]),'const':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,104,106,125,126,129,130,132,151,153,156,157,158,164,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'qstring':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,104,106,125,126,129,130,132,151,153,156,157,158,164,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'math_expression':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,104,106,125,126,129,130,132,151,153,156,157,158,164,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'vector_pop':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,104,106,125,126,129,130,132,151,153,156,157,158,164,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'variables':([16,121,122,],[81,143,144,]),'any':([17,],[85,]),'statements_group':([19,132,156,158,164,],[90,149,161,163,165,]),'inner_statement':([19,132,156,158,164,],[92,92,92,92,92,]),'string':([54,55,],[108,110,]),'parameters':([104,157,],[135,162,]),'parameter':([104,153,157,],[136,160,136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',29),
  ('statements_group -> BEGIN statements END','statements_group',3,'p_statements_group','parser.py',34),
  ('statements_group -> inner_statement','statements_group',1,'p_statements_group','parser.py',35),
  ('inner_statement -> declaration','inner_statement',1,'p_inner_statement','parser.py',43),
  ('inner_statement -> assignment','inner_statement',1,'p_inner_statement','parser.py',44),
  ('inner_statement -> while','inner_statement',1,'p_inner_statement','parser.py',45),
  ('inner_statement -> if','inner_statement',1,'p_inner_statement','parser.py',46),
  ('inner_statement -> command','inner_statement',1,'p_inner_statement','parser.py',47),
  ('inner_statement -> function','inner_statement',1,'p_inner_statement','parser.py',48),
  ('inner_statement -> call','inner_statement',1,'p_inner_statement','parser.py',49),
  ('inner_statement -> RETURN expression','inner_statement',2,'p_inner_statement','parser.py',50),
  ('inner_statement -> empty','inner_statement',1,'p_inner_statement','parser.py',51),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',60),
  ('statements -> statement','statements',1,'p_statements','parser.py',61),
  ('statement -> declaration NEWLINE','statement',2,'p_statement','parser.py',69),
  ('statement -> comment NEWLINE','statement',2,'p_statement','parser.py',70),
  ('statement -> assignment NEWLINE','statement',2,'p_statement','parser.py',71),
  ('statement -> while NEWLINE','statement',2,'p_statement','parser.py',72),
  ('statement -> if NEWLINE','statement',2,'p_statement','parser.py',73),
  ('statement -> command NEWLINE','statement',2,'p_statement','parser.py',74),
  ('statement -> function NEWLINE','statement',2,'p_statement','parser.py',75),
  ('statement -> call NEWLINE','statement',2,'p_statement','parser.py',76),
  ('statement -> RETURN expression NEWLINE','statement',3,'p_statement','parser.py',77),
  ('statement -> empty NEWLINE','statement',2,'p_statement','parser.py',78),
  ('statement -> errors NEWLINE','statement',2,'p_statement_error','parser.py',87),
  ('statement -> errors','statement',1,'p_statement_error_no_nl','parser.py',92),
  ('declaration -> type variables','declaration',2,'p_declaration','parser.py',97),
  ('comment -> COMMENT any','comment',2,'p_comment','parser.py',102),
  ('any -> any VARIABLE','any',2,'p_any','parser.py',107),
  ('any -> VARIABLE','any',1,'p_any','parser.py',108),
  ('type -> INTEGER','type',1,'p_type','parser.py',116),
  ('type -> STRING','type',1,'p_type','parser.py',117),
  ('type -> BOOL','type',1,'p_type','parser.py',118),
  ('type -> VECTOR OF type','type',3,'p_type','parser.py',119),
  ('variables -> variable COMMA variables','variables',3,'p_variables','parser.py',128),
  ('variables -> assignment COMMA variables','variables',3,'p_variables','parser.py',129),
  ('variables -> variable','variables',1,'p_variables','parser.py',130),
  ('variables -> assignment','variables',1,'p_variables','parser.py',131),
  ('assignment -> variable ASSIGNMENT expression','assignment',3,'p_assignment','parser.py',139),
  ('variable -> VARIABLE L_QBRACKET expression R_QBRACKET','variable',4,'p_variable','parser.py',144),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',145),
  ('expression -> variable','expression',1,'p_expression','parser.py',153),
  ('expression -> const','expression',1,'p_expression','parser.py',154),
  ('expression -> qstring','expression',1,'p_expression','parser.py',155),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',156),
  ('expression -> robot_command','expression',1,'p_expression','parser.py',157),
  ('expression -> vector_pop','expression',1,'p_expression','parser.py',158),
  ('expression -> call','expression',1,'p_expression','parser.py',159),
  ('qstring -> DOUBLE_QUOTE string DOUBLE_QUOTE','qstring',3,'p_qstring','parser.py',164),
  ('qstring -> QUOTE string QUOTE','qstring',3,'p_qstring','parser.py',165),
  ('string -> string VARIABLE','string',2,'p_string','parser.py',170),
  ('string -> VARIABLE','string',1,'p_string','parser.py',171),
  ('const -> TRUE','const',1,'p_const','parser.py',179),
  ('const -> FALSE','const',1,'p_const','parser.py',180),
  ('const -> UNDEFINED','const',1,'p_const','parser.py',181),
  ('const -> DECIMAL','const',1,'p_const','parser.py',182),
  ('const -> EXIT','const',1,'p_const','parser.py',183),
  ('const -> WOOD','const',1,'p_const','parser.py',184),
  ('const -> STEEL','const',1,'p_const','parser.py',185),
  ('const -> GLASS','const',1,'p_const','parser.py',186),
  ('const -> CONCRETE','const',1,'p_const','parser.py',187),
  ('const -> PLASTIC','const',1,'p_const','parser.py',188),
  ('math_expression -> expression PLUS expression','math_expression',3,'p_math_expression','parser.py',193),
  ('math_expression -> expression MINUS expression','math_expression',3,'p_math_expression','parser.py',194),
  ('math_expression -> MINUS expression','math_expression',2,'p_math_expression','parser.py',195),
  ('math_expression -> expression LESS expression','math_expression',3,'p_math_expression','parser.py',196),
  ('math_expression -> expression GREATER expression','math_expression',3,'p_math_expression','parser.py',197),
  ('math_expression -> expression EQ expression','math_expression',3,'p_math_expression','parser.py',198),
  ('math_expression -> expression NOTEQ expression','math_expression',3,'p_math_expression','parser.py',199),
  ('while -> DO statements_group UNTIL expression','while',4,'p_while','parser.py',207),
  ('if -> IF expression THEN statements_group','if',4,'p_if','parser.py',212),
  ('if -> IF expression THEN statements_group ELSE statements_group','if',6,'p_if','parser.py',213),
  ('function -> FUNCTION OF type VARIABLE LBRACKET parameters RBRACKET statements_group','function',8,'p_function','parser.py',221),
  ('function -> FUNCTION OF type VARIABLE BRACKETS statements_group','function',6,'p_function','parser.py',222),
  ('command -> vector_command','command',1,'p_command','parser.py',231),
  ('command -> robot_command','command',1,'p_command','parser.py',232),
  ('command -> converting_command','command',1,'p_command','parser.py',233),
  ('converting_command -> expression TO type','converting_command',3,'p_converting_command','parser.py',238),
  ('converting_command -> expression TO expression','converting_command',3,'p_converting_command','parser.py',239),
  ('vector_command -> variable PUSH BACK expression','vector_command',4,'p_vector_command','parser.py',244),
  ('vector_command -> variable PUSH FRONT expression','vector_command',4,'p_vector_command','parser.py',245),
  ('vector_pop -> variable POP BACK','vector_pop',3,'p_vector_command_pop','parser.py',250),
  ('vector_pop -> variable POP FRONT','vector_pop',3,'p_vector_command_pop','parser.py',251),
  ('robot_command -> LEFT','robot_command',1,'p_robot_command','parser.py',256),
  ('robot_command -> RIGHT','robot_command',1,'p_robot_command','parser.py',257),
  ('robot_command -> FORWARD','robot_command',1,'p_robot_command','parser.py',258),
  ('robot_command -> BACK','robot_command',1,'p_robot_command','parser.py',259),
  ('robot_command -> ROTATE_RIGHT','robot_command',1,'p_robot_command','parser.py',260),
  ('robot_command -> ROTATE_LEFT','robot_command',1,'p_robot_command','parser.py',261),
  ('robot_command -> LMS','robot_command',1,'p_robot_command','parser.py',262),
  ('robot_command -> REFLECT','robot_command',1,'p_robot_command','parser.py',263),
  ('robot_command -> DRILL','robot_command',1,'p_robot_command','parser.py',264),
  ('call -> VARIABLE LBRACKET parameters RBRACKET','call',4,'p_call','parser.py',269),
  ('call -> VARIABLE BRACKETS','call',2,'p_call','parser.py',270),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',278),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','parser.py',283),
  ('parameters -> parameter','parameters',1,'p_parameters','parser.py',284),
  ('parameters -> parameters CONTINUE','parameters',2,'p_parameters','parser.py',285),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',295),
  ('parameter -> VARIABLE EQ expression','parameter',3,'p_parameter','parser.py',296),
  ('errors -> errors error','errors',2,'p_errors','parser.py',304),
  ('errors -> error','errors',1,'p_errors','parser.py',305),
]
