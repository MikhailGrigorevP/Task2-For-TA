
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGNMENT BACK BEGIN BOOL BRACKETS COMMA COMMENT CONCRETE CONTINUE DECIMAL DO DOUBLE_QUOTE DRILL ELSE END EQ EXIT FALSE FORWARD FRONT FUNCTION GLASS GREATER IF INTEGER LBRACKET LEFT LESS LMS L_QBRACKET MINUS NEWLINE NOTEQ OF PLASTIC PLUS POP PUSH QUOTE RBRACKET REFLECT RETURN RIGHT ROTATE_LEFT ROTATE_RIGHT R_QBRACKET STEEL STRING TEXT THEN TO TRUE UNDEFINED UNTIL VARIABLE VECTOR WOODprogram : statementsstatements_group : BEGIN statements END\n                            | inner_statementinner_statement : declaration\n                     | assignment\n                     | while\n                     | if\n                     | command\n                     | function\n                     | call\n                     | RETURN expression\n                     | emptystatements : statements statement\n                      | statementstatement : declaration NEWLINE\n                     | comment NEWLINE\n                     | assignment NEWLINE\n                     | while NEWLINE\n                     | if NEWLINE\n                     | command NEWLINE\n                     | function NEWLINE\n                     | call NEWLINE\n                     | RETURN expression NEWLINE\n                     | empty NEWLINEstatement : errors NEWLINEstatement : errorsdeclaration : type variablescomment : COMMENT anyany : any VARIABLE\n               | VARIABLEtype : INTEGER\n                | STRING\n                | BOOL\n                | VECTOR OF type\n        type : errorsvariables : variable COMMA variables\n                | assignment COMMA variables\n                | variable\n                | assignmentassignment : variable ASSIGNMENT expressionvariable : VARIABLE L_QBRACKET expression R_QBRACKET\n                    | VARIABLEexpression : variable\n                      | const\n                      | qstring\n                      | math_expression\n                      | robot_command\n                      | vector_pop\n                      | callqstring : DOUBLE_QUOTE string DOUBLE_QUOTE\n                   | QUOTE string QUOTEstring : string VARIABLE\n                   | VARIABLEconst : TRUE\n                 | FALSE\n                 | UNDEFINED\n                 | DECIMAL\n                 | EXIT\n                 | WOOD\n                 | STEEL\n                 | GLASS\n                 | CONCRETE\n                 | PLASTICmath_expression : expression PLUS expression\n                           | expression MINUS expression\n                           | MINUS expression\n                           | expression LESS expression\n                           | expression GREATER expression\n                           | expression EQ expression\n                           | expression NOTEQ expressionwhile : DO statements_group UNTIL expressionif : IF expression THEN statements_group\n              | IF expression THEN statements_group ELSE statements_groupfunction : FUNCTION OF type VARIABLE LBRACKET parameters RBRACKET statements_group\n                    | FUNCTION OF type VARIABLE BRACKETS statements_groupcommand : vector_command\n                   | robot_command\n                   | converting_commandconverting_command : expression TO type\n                              | expression TO expressionvector_command : variable PUSH BACK expression\n                          | variable PUSH FRONT expressionvector_pop : variable POP BACK\n                      | variable POP FRONTrobot_command : LEFT\n                    | RIGHT\n                    | FORWARD\n                    | BACK\n                    | ROTATE_RIGHT\n                    | ROTATE_LEFT\n                    | LMS\n                    | REFLECT\n                    | DRILLcall : VARIABLE LBRACKET parameters RBRACKET\n                | VARIABLE BRACKETSempty : parameters : parameters COMMA parameter\n                      | parameter\n                      | parameters CONTINUEparameter : expression\n                     | VARIABLE EQ expressionerrors : errors error\n        | error'
    
_lr_action_items = {'RETURN':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,78,79,80,91,113,131,133,157,159,165,],[12,12,-14,-26,100,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-102,12,-23,12,100,100,100,100,]),'COMMENT':([0,2,3,15,26,57,58,59,60,61,62,63,64,65,78,79,80,91,113,131,],[17,17,-14,-26,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-102,17,-23,17,]),'DO':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,78,79,80,91,113,131,133,157,159,165,],[19,19,-14,-26,19,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-102,19,-23,19,19,19,19,19,]),'IF':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,78,79,80,91,113,131,133,157,159,165,],[20,20,-14,-26,20,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-102,20,-23,20,20,20,20,20,]),'FUNCTION':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,78,79,80,91,113,131,133,157,159,165,],[24,24,-14,-26,24,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-102,24,-23,24,24,24,24,24,]),'VARIABLE':([0,2,3,12,15,16,17,19,20,26,27,28,29,54,55,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,85,86,87,91,100,102,105,107,109,110,111,113,122,123,124,126,127,130,131,133,134,140,142,152,154,157,158,159,165,],[25,25,-14,70,-26,84,86,25,70,-103,-31,-32,-33,110,110,70,-13,-15,-16,-17,-18,-19,-20,-21,-22,70,70,70,70,70,70,70,-24,-25,-102,124,-30,70,25,70,-35,135,70,142,-53,142,-23,84,84,-29,70,70,70,25,25,151,-34,-52,70,135,25,135,25,25,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,14,15,21,22,23,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,101,102,106,112,113,114,115,116,117,118,119,120,121,124,125,128,129,131,132,133,140,141,143,144,145,146,147,148,149,150,153,156,157,159,162,164,165,166,],[-96,-96,-14,58,59,60,61,62,63,64,65,78,79,-76,-77,-78,-103,-31,-32,-33,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-13,-15,-16,-17,-18,-19,-20,-21,-22,113,-43,-47,-49,-42,-24,-25,-102,-27,-38,-39,-42,-28,-30,-96,-3,-4,-5,-6,-7,-8,-9,-10,-12,-35,-95,-66,-23,-80,-79,-64,-65,-67,-68,-69,-70,-29,-40,-83,-84,-96,-11,-96,-34,-50,-51,-36,-37,-81,-82,-71,-2,-72,-94,-41,-96,-96,-73,-75,-96,-74,]),'error':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,102,104,108,113,131,133,157,159,165,],[26,26,-14,80,26,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,26,-24,-25,-102,26,80,26,26,-23,26,26,26,26,26,]),'INTEGER':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,104,108,113,131,133,157,159,165,],[27,27,-14,-26,27,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,27,-24,-25,-102,27,27,27,-23,27,27,27,27,27,]),'STRING':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,104,108,113,131,133,157,159,165,],[28,28,-14,-26,28,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,28,-24,-25,-102,28,28,28,-23,28,28,28,28,28,]),'BOOL':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,104,108,113,131,133,157,159,165,],[29,29,-14,-26,29,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,29,-24,-25,-102,29,29,29,-23,29,29,29,29,29,]),'VECTOR':([0,2,3,15,19,26,57,58,59,60,61,62,63,64,65,71,78,79,80,91,104,108,113,131,133,157,159,165,],[30,30,-14,-26,30,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,30,-24,-25,-102,30,30,30,-23,30,30,30,30,30,]),'LEFT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[32,32,-14,32,-26,32,32,-103,32,-13,-15,-16,-17,-18,-19,-20,-21,-22,32,32,32,32,32,32,32,-24,-25,-102,32,32,32,32,32,-23,32,32,32,32,32,32,32,32,32,32,32,]),'RIGHT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[33,33,-14,33,-26,33,33,-103,33,-13,-15,-16,-17,-18,-19,-20,-21,-22,33,33,33,33,33,33,33,-24,-25,-102,33,33,33,33,33,-23,33,33,33,33,33,33,33,33,33,33,33,]),'FORWARD':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[34,34,-14,34,-26,34,34,-103,34,-13,-15,-16,-17,-18,-19,-20,-21,-22,34,34,34,34,34,34,34,-24,-25,-102,34,34,34,34,34,-23,34,34,34,34,34,34,34,34,34,34,34,]),'BACK':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,88,89,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[31,31,-14,31,-26,31,31,-103,31,-13,-15,-16,-17,-18,-19,-20,-21,-22,31,31,31,31,31,31,31,-24,-25,-102,31,126,128,31,31,31,31,-23,31,31,31,31,31,31,31,31,31,31,31,]),'ROTATE_RIGHT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[35,35,-14,35,-26,35,35,-103,35,-13,-15,-16,-17,-18,-19,-20,-21,-22,35,35,35,35,35,35,35,-24,-25,-102,35,35,35,35,35,-23,35,35,35,35,35,35,35,35,35,35,35,]),'ROTATE_LEFT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[36,36,-14,36,-26,36,36,-103,36,-13,-15,-16,-17,-18,-19,-20,-21,-22,36,36,36,36,36,36,36,-24,-25,-102,36,36,36,36,36,-23,36,36,36,36,36,36,36,36,36,36,36,]),'LMS':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[37,37,-14,37,-26,37,37,-103,37,-13,-15,-16,-17,-18,-19,-20,-21,-22,37,37,37,37,37,37,37,-24,-25,-102,37,37,37,37,37,-23,37,37,37,37,37,37,37,37,37,37,37,]),'REFLECT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[38,38,-14,38,-26,38,38,-103,38,-13,-15,-16,-17,-18,-19,-20,-21,-22,38,38,38,38,38,38,38,-24,-25,-102,38,38,38,38,38,-23,38,38,38,38,38,38,38,38,38,38,38,]),'DRILL':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[39,39,-14,39,-26,39,39,-103,39,-13,-15,-16,-17,-18,-19,-20,-21,-22,39,39,39,39,39,39,39,-24,-25,-102,39,39,39,39,39,-23,39,39,39,39,39,39,39,39,39,39,39,]),'TRUE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[44,44,-14,44,-26,44,44,-103,44,-13,-15,-16,-17,-18,-19,-20,-21,-22,44,44,44,44,44,44,44,-24,-25,-102,44,44,44,44,44,-23,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[45,45,-14,45,-26,45,45,-103,45,-13,-15,-16,-17,-18,-19,-20,-21,-22,45,45,45,45,45,45,45,-24,-25,-102,45,45,45,45,45,-23,45,45,45,45,45,45,45,45,45,45,45,]),'UNDEFINED':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[46,46,-14,46,-26,46,46,-103,46,-13,-15,-16,-17,-18,-19,-20,-21,-22,46,46,46,46,46,46,46,-24,-25,-102,46,46,46,46,46,-23,46,46,46,46,46,46,46,46,46,46,46,]),'DECIMAL':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[47,47,-14,47,-26,47,47,-103,47,-13,-15,-16,-17,-18,-19,-20,-21,-22,47,47,47,47,47,47,47,-24,-25,-102,47,47,47,47,47,-23,47,47,47,47,47,47,47,47,47,47,47,]),'EXIT':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[48,48,-14,48,-26,48,48,-103,48,-13,-15,-16,-17,-18,-19,-20,-21,-22,48,48,48,48,48,48,48,-24,-25,-102,48,48,48,48,48,-23,48,48,48,48,48,48,48,48,48,48,48,]),'WOOD':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[49,49,-14,49,-26,49,49,-103,49,-13,-15,-16,-17,-18,-19,-20,-21,-22,49,49,49,49,49,49,49,-24,-25,-102,49,49,49,49,49,-23,49,49,49,49,49,49,49,49,49,49,49,]),'STEEL':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[50,50,-14,50,-26,50,50,-103,50,-13,-15,-16,-17,-18,-19,-20,-21,-22,50,50,50,50,50,50,50,-24,-25,-102,50,50,50,50,50,-23,50,50,50,50,50,50,50,50,50,50,50,]),'GLASS':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[51,51,-14,51,-26,51,51,-103,51,-13,-15,-16,-17,-18,-19,-20,-21,-22,51,51,51,51,51,51,51,-24,-25,-102,51,51,51,51,51,-23,51,51,51,51,51,51,51,51,51,51,51,]),'CONCRETE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[52,52,-14,52,-26,52,52,-103,52,-13,-15,-16,-17,-18,-19,-20,-21,-22,52,52,52,52,52,52,52,-24,-25,-102,52,52,52,52,52,-23,52,52,52,52,52,52,52,52,52,52,52,]),'PLASTIC':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,113,126,127,130,131,133,152,154,157,158,159,165,],[53,53,-14,53,-26,53,53,-103,53,-13,-15,-16,-17,-18,-19,-20,-21,-22,53,53,53,53,53,53,53,-24,-25,-102,53,53,53,53,53,-23,53,53,53,53,53,53,53,53,53,53,53,]),'DOUBLE_QUOTE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,109,110,113,126,127,130,131,133,142,152,154,157,158,159,165,],[54,54,-14,54,-26,54,54,-103,54,-13,-15,-16,-17,-18,-19,-20,-21,-22,54,54,54,54,54,54,54,-24,-25,-102,54,54,54,54,54,141,-53,-23,54,54,54,54,54,-52,54,54,54,54,54,54,]),'QUOTE':([0,2,3,12,15,19,20,26,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,77,78,79,80,87,91,100,105,107,110,111,113,126,127,130,131,133,142,152,154,157,158,159,165,],[55,55,-14,55,-26,55,55,-103,55,-13,-15,-16,-17,-18,-19,-20,-21,-22,55,55,55,55,55,55,55,-24,-25,-102,55,55,55,55,55,-53,143,-23,55,55,55,55,55,-52,55,55,55,55,55,55,]),'MINUS':([0,2,3,11,12,13,15,18,19,20,22,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,91,99,100,103,105,106,107,112,113,114,116,117,118,119,120,121,125,126,127,128,129,130,131,132,133,135,138,139,141,143,146,147,148,152,153,154,156,157,158,159,160,165,],[56,56,-14,-49,56,73,-26,-43,56,56,-47,-42,-103,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,56,-13,-15,-16,-17,-18,-19,-20,-21,-22,73,-43,-47,-49,-42,56,56,56,56,56,56,56,-24,-25,-102,56,56,-49,56,73,56,-95,56,73,-23,73,73,73,73,73,73,73,73,56,56,-83,-84,56,56,73,56,-42,73,73,-50,-51,73,73,73,56,-94,56,-41,56,56,56,73,56,]),'$end':([1,2,3,15,26,57,58,59,60,61,62,63,64,65,78,79,80,113,],[0,-1,-14,-26,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-102,-23,]),'END':([3,15,26,57,58,59,60,61,62,63,64,65,78,79,80,113,131,],[-14,-26,-103,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-102,-23,149,]),'TO':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,99,106,112,116,117,118,119,120,121,128,129,141,143,153,156,],[-49,71,-43,-47,-42,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-43,-47,-49,-42,-49,-95,-66,-64,-65,-67,-68,-69,-70,-83,-84,-50,-51,-94,-41,]),'PLUS':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,103,106,112,114,116,117,118,119,120,121,125,128,129,132,135,138,139,141,143,146,147,148,153,156,160,],[-49,72,-43,-47,-42,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,72,-43,-47,-49,-42,-49,72,-95,72,72,72,72,72,72,72,72,72,-83,-84,72,-42,72,72,-50,-51,72,72,72,-94,-41,72,]),'LESS':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,103,106,112,114,116,117,118,119,120,121,125,128,129,132,135,138,139,141,143,146,147,148,153,156,160,],[-49,74,-43,-47,-42,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,74,-43,-47,-49,-42,-49,74,-95,74,74,74,74,74,74,74,74,74,-83,-84,74,-42,74,74,-50,-51,74,74,74,-94,-41,74,]),'GREATER':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,103,106,112,114,116,117,118,119,120,121,125,128,129,132,135,138,139,141,143,146,147,148,153,156,160,],[-49,75,-43,-47,-42,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,75,-43,-47,-49,-42,-49,75,-95,75,75,75,75,75,75,75,75,75,-83,-84,75,-42,75,75,-50,-51,75,75,75,-94,-41,75,]),'EQ':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,103,106,112,114,116,117,118,119,120,121,125,128,129,132,135,138,139,141,143,146,147,148,153,156,160,],[-49,76,-43,-47,-42,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,76,-43,-47,-49,-42,-49,76,-95,76,76,76,76,76,76,76,76,76,-83,-84,76,152,76,76,-50,-51,76,76,76,-94,-41,76,]),'NOTEQ':([11,13,18,22,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,66,67,68,69,70,99,103,106,112,114,116,117,118,119,120,121,125,128,129,132,135,138,139,141,143,146,147,148,153,156,160,],[-49,77,-43,-47,-42,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,77,-43,-47,-49,-42,-49,77,-95,77,77,77,77,77,77,77,77,77,-83,-84,77,-42,77,77,-50,-51,77,77,77,-94,-41,77,]),'ASSIGNMENT':([18,25,82,84,156,],[87,-42,87,-42,-41,]),'PUSH':([18,25,156,],[88,-42,-41,]),'POP':([18,25,67,70,135,156,],[89,-42,89,-42,-42,-41,]),'BEGIN':([19,133,157,159,165,],[91,91,91,91,91,]),'UNTIL':([19,21,22,23,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,80,81,82,83,84,90,92,93,94,95,96,97,98,99,101,102,106,112,114,115,116,117,118,119,120,121,125,128,129,132,133,140,141,143,144,145,146,147,148,149,150,153,156,157,159,162,164,165,166,],[-96,-76,-77,-78,-103,-31,-32,-33,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-43,-47,-49,-42,-102,-27,-38,-39,-42,130,-3,-4,-5,-6,-7,-8,-9,-10,-12,-35,-95,-66,-80,-79,-64,-65,-67,-68,-69,-70,-40,-83,-84,-11,-96,-34,-50,-51,-36,-37,-81,-82,-71,-2,-72,-94,-41,-96,-96,-73,-75,-96,-74,]),'ELSE':([21,22,23,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,80,81,82,83,84,92,93,94,95,96,97,98,99,101,102,106,112,114,115,116,117,118,119,120,121,125,128,129,132,133,140,141,143,144,145,146,147,148,149,150,153,156,157,159,162,164,165,166,],[-76,-77,-78,-103,-31,-32,-33,-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-43,-47,-49,-42,-102,-27,-38,-39,-42,-3,-4,-5,-6,-7,-8,-9,-10,-12,-35,-95,-66,-80,-79,-64,-65,-67,-68,-69,-70,-40,-83,-84,-11,-96,-34,-50,-51,-36,-37,-81,-82,-71,-2,157,-94,-41,-96,-96,-73,-75,-96,-74,]),'OF':([24,30,],[104,108,]),'LBRACKET':([25,70,135,151,],[105,105,105,158,]),'BRACKETS':([25,70,135,151,],[106,106,106,159,]),'L_QBRACKET':([25,70,84,135,],[107,107,107,107,]),'THEN':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,103,106,112,116,117,118,119,120,121,128,129,141,143,153,156,],[-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-43,-47,-49,-42,133,-95,-66,-64,-65,-67,-68,-69,-70,-83,-84,-50,-51,-94,-41,]),'COMMA':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,82,83,84,106,112,116,117,118,119,120,121,125,128,129,135,136,137,138,141,143,153,155,156,160,161,163,],[-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-43,-47,-49,-42,122,123,-42,-95,-66,-64,-65,-67,-68,-69,-70,-40,-83,-84,-42,154,-98,-100,-50,-51,-94,-99,-41,-101,-97,154,]),'RBRACKET':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,106,112,116,117,118,119,120,121,128,129,135,136,137,138,141,143,153,155,156,160,161,163,],[-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-43,-47,-49,-42,-95,-66,-64,-65,-67,-68,-69,-70,-83,-84,-42,153,-98,-100,-50,-51,-94,-99,-41,-101,-97,165,]),'CONTINUE':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,106,112,116,117,118,119,120,121,128,129,135,136,137,138,141,143,153,155,156,160,161,163,],[-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-43,-47,-49,-42,-95,-66,-64,-65,-67,-68,-69,-70,-83,-84,-42,155,-98,-100,-50,-51,-94,-99,-41,-101,-97,155,]),'R_QBRACKET':([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,67,68,69,70,106,112,116,117,118,119,120,121,128,129,139,141,143,153,156,],[-88,-85,-86,-87,-89,-90,-91,-92,-93,-44,-45,-46,-48,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-43,-47,-49,-42,-95,-66,-64,-65,-67,-68,-69,-70,-83,-84,156,-50,-51,-94,-41,]),'FRONT':([88,89,],[127,129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,91,],[2,131,]),'statement':([0,2,91,131,],[3,57,3,57,]),'declaration':([0,2,19,91,131,133,157,159,165,],[4,4,93,4,4,93,93,93,93,]),'comment':([0,2,91,131,],[5,5,5,5,]),'assignment':([0,2,16,19,91,122,123,131,133,157,159,165,],[6,6,83,94,6,83,83,6,94,94,94,94,]),'while':([0,2,19,91,131,133,157,159,165,],[7,7,95,7,7,95,95,95,95,]),'if':([0,2,19,91,131,133,157,159,165,],[8,8,96,8,8,96,96,96,96,]),'command':([0,2,19,91,131,133,157,159,165,],[9,9,97,9,9,97,97,97,97,]),'function':([0,2,19,91,131,133,157,159,165,],[10,10,98,10,10,98,98,98,98,]),'call':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,105,107,126,127,130,131,133,152,154,157,158,159,165,],[11,11,69,99,69,69,69,69,69,69,69,69,69,69,11,69,69,69,69,69,69,11,99,69,69,99,69,99,99,]),'expression':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,105,107,126,127,130,131,133,152,154,157,158,159,165,],[13,13,66,13,103,112,114,116,117,118,119,120,121,125,13,132,138,139,146,147,148,13,13,160,138,13,138,13,13,]),'empty':([0,2,19,91,131,133,157,159,165,],[14,14,101,14,14,101,101,101,101,]),'errors':([0,2,19,71,91,104,108,131,133,157,159,165,],[15,15,102,102,15,102,102,15,102,102,102,102,]),'type':([0,2,19,71,91,104,108,131,133,157,159,165,],[16,16,16,115,16,134,140,16,16,16,16,16,]),'variable':([0,2,12,16,19,20,56,71,72,73,74,75,76,77,87,91,100,105,107,122,123,126,127,130,131,133,152,154,157,158,159,165,],[18,18,67,82,18,67,67,67,67,67,67,67,67,67,67,18,67,67,67,82,82,67,67,67,18,18,67,67,18,67,18,18,]),'vector_command':([0,2,19,91,131,133,157,159,165,],[21,21,21,21,21,21,21,21,21,]),'robot_command':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,105,107,126,127,130,131,133,152,154,157,158,159,165,],[22,22,68,22,68,68,68,68,68,68,68,68,68,68,22,68,68,68,68,68,68,22,22,68,68,22,68,22,22,]),'converting_command':([0,2,19,91,131,133,157,159,165,],[23,23,23,23,23,23,23,23,23,]),'const':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,105,107,126,127,130,131,133,152,154,157,158,159,165,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'qstring':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,105,107,126,127,130,131,133,152,154,157,158,159,165,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'math_expression':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,105,107,126,127,130,131,133,152,154,157,158,159,165,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'vector_pop':([0,2,12,19,20,56,71,72,73,74,75,76,77,87,91,100,105,107,126,127,130,131,133,152,154,157,158,159,165,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'variables':([16,122,123,],[81,144,145,]),'any':([17,],[85,]),'statements_group':([19,133,157,159,165,],[90,150,162,164,166,]),'inner_statement':([19,133,157,159,165,],[92,92,92,92,92,]),'string':([54,55,],[109,111,]),'parameters':([105,158,],[136,163,]),'parameter':([105,154,158,],[137,161,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',28),
  ('statements_group -> BEGIN statements END','statements_group',3,'p_statements_group','parser.py',33),
  ('statements_group -> inner_statement','statements_group',1,'p_statements_group','parser.py',34),
  ('inner_statement -> declaration','inner_statement',1,'p_inner_statement','parser.py',42),
  ('inner_statement -> assignment','inner_statement',1,'p_inner_statement','parser.py',43),
  ('inner_statement -> while','inner_statement',1,'p_inner_statement','parser.py',44),
  ('inner_statement -> if','inner_statement',1,'p_inner_statement','parser.py',45),
  ('inner_statement -> command','inner_statement',1,'p_inner_statement','parser.py',46),
  ('inner_statement -> function','inner_statement',1,'p_inner_statement','parser.py',47),
  ('inner_statement -> call','inner_statement',1,'p_inner_statement','parser.py',48),
  ('inner_statement -> RETURN expression','inner_statement',2,'p_inner_statement','parser.py',49),
  ('inner_statement -> empty','inner_statement',1,'p_inner_statement','parser.py',50),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',59),
  ('statements -> statement','statements',1,'p_statements','parser.py',60),
  ('statement -> declaration NEWLINE','statement',2,'p_statement','parser.py',68),
  ('statement -> comment NEWLINE','statement',2,'p_statement','parser.py',69),
  ('statement -> assignment NEWLINE','statement',2,'p_statement','parser.py',70),
  ('statement -> while NEWLINE','statement',2,'p_statement','parser.py',71),
  ('statement -> if NEWLINE','statement',2,'p_statement','parser.py',72),
  ('statement -> command NEWLINE','statement',2,'p_statement','parser.py',73),
  ('statement -> function NEWLINE','statement',2,'p_statement','parser.py',74),
  ('statement -> call NEWLINE','statement',2,'p_statement','parser.py',75),
  ('statement -> RETURN expression NEWLINE','statement',3,'p_statement','parser.py',76),
  ('statement -> empty NEWLINE','statement',2,'p_statement','parser.py',77),
  ('statement -> errors NEWLINE','statement',2,'p_statement_error','parser.py',86),
  ('statement -> errors','statement',1,'p_statement_error_no_nl','parser.py',91),
  ('declaration -> type variables','declaration',2,'p_declaration','parser.py',96),
  ('comment -> COMMENT any','comment',2,'p_comment','parser.py',101),
  ('any -> any VARIABLE','any',2,'p_any','parser.py',106),
  ('any -> VARIABLE','any',1,'p_any','parser.py',107),
  ('type -> INTEGER','type',1,'p_type','parser.py',115),
  ('type -> STRING','type',1,'p_type','parser.py',116),
  ('type -> BOOL','type',1,'p_type','parser.py',117),
  ('type -> VECTOR OF type','type',3,'p_type','parser.py',118),
  ('type -> errors','type',1,'p_type_error','parser.py',128),
  ('variables -> variable COMMA variables','variables',3,'p_variables','parser.py',134),
  ('variables -> assignment COMMA variables','variables',3,'p_variables','parser.py',135),
  ('variables -> variable','variables',1,'p_variables','parser.py',136),
  ('variables -> assignment','variables',1,'p_variables','parser.py',137),
  ('assignment -> variable ASSIGNMENT expression','assignment',3,'p_assignment','parser.py',145),
  ('variable -> VARIABLE L_QBRACKET expression R_QBRACKET','variable',4,'p_variable','parser.py',150),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',151),
  ('expression -> variable','expression',1,'p_expression','parser.py',159),
  ('expression -> const','expression',1,'p_expression','parser.py',160),
  ('expression -> qstring','expression',1,'p_expression','parser.py',161),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',162),
  ('expression -> robot_command','expression',1,'p_expression','parser.py',163),
  ('expression -> vector_pop','expression',1,'p_expression','parser.py',164),
  ('expression -> call','expression',1,'p_expression','parser.py',165),
  ('qstring -> DOUBLE_QUOTE string DOUBLE_QUOTE','qstring',3,'p_qstring','parser.py',170),
  ('qstring -> QUOTE string QUOTE','qstring',3,'p_qstring','parser.py',171),
  ('string -> string VARIABLE','string',2,'p_string','parser.py',176),
  ('string -> VARIABLE','string',1,'p_string','parser.py',177),
  ('const -> TRUE','const',1,'p_const','parser.py',185),
  ('const -> FALSE','const',1,'p_const','parser.py',186),
  ('const -> UNDEFINED','const',1,'p_const','parser.py',187),
  ('const -> DECIMAL','const',1,'p_const','parser.py',188),
  ('const -> EXIT','const',1,'p_const','parser.py',189),
  ('const -> WOOD','const',1,'p_const','parser.py',190),
  ('const -> STEEL','const',1,'p_const','parser.py',191),
  ('const -> GLASS','const',1,'p_const','parser.py',192),
  ('const -> CONCRETE','const',1,'p_const','parser.py',193),
  ('const -> PLASTIC','const',1,'p_const','parser.py',194),
  ('math_expression -> expression PLUS expression','math_expression',3,'p_math_expression','parser.py',199),
  ('math_expression -> expression MINUS expression','math_expression',3,'p_math_expression','parser.py',200),
  ('math_expression -> MINUS expression','math_expression',2,'p_math_expression','parser.py',201),
  ('math_expression -> expression LESS expression','math_expression',3,'p_math_expression','parser.py',202),
  ('math_expression -> expression GREATER expression','math_expression',3,'p_math_expression','parser.py',203),
  ('math_expression -> expression EQ expression','math_expression',3,'p_math_expression','parser.py',204),
  ('math_expression -> expression NOTEQ expression','math_expression',3,'p_math_expression','parser.py',205),
  ('while -> DO statements_group UNTIL expression','while',4,'p_while','parser.py',213),
  ('if -> IF expression THEN statements_group','if',4,'p_if','parser.py',218),
  ('if -> IF expression THEN statements_group ELSE statements_group','if',6,'p_if','parser.py',219),
  ('function -> FUNCTION OF type VARIABLE LBRACKET parameters RBRACKET statements_group','function',8,'p_function','parser.py',227),
  ('function -> FUNCTION OF type VARIABLE BRACKETS statements_group','function',6,'p_function','parser.py',228),
  ('command -> vector_command','command',1,'p_command','parser.py',237),
  ('command -> robot_command','command',1,'p_command','parser.py',238),
  ('command -> converting_command','command',1,'p_command','parser.py',239),
  ('converting_command -> expression TO type','converting_command',3,'p_converting_command','parser.py',244),
  ('converting_command -> expression TO expression','converting_command',3,'p_converting_command','parser.py',245),
  ('vector_command -> variable PUSH BACK expression','vector_command',4,'p_vector_command','parser.py',250),
  ('vector_command -> variable PUSH FRONT expression','vector_command',4,'p_vector_command','parser.py',251),
  ('vector_pop -> variable POP BACK','vector_pop',3,'p_vector_command_pop','parser.py',256),
  ('vector_pop -> variable POP FRONT','vector_pop',3,'p_vector_command_pop','parser.py',257),
  ('robot_command -> LEFT','robot_command',1,'p_robot_command','parser.py',262),
  ('robot_command -> RIGHT','robot_command',1,'p_robot_command','parser.py',263),
  ('robot_command -> FORWARD','robot_command',1,'p_robot_command','parser.py',264),
  ('robot_command -> BACK','robot_command',1,'p_robot_command','parser.py',265),
  ('robot_command -> ROTATE_RIGHT','robot_command',1,'p_robot_command','parser.py',266),
  ('robot_command -> ROTATE_LEFT','robot_command',1,'p_robot_command','parser.py',267),
  ('robot_command -> LMS','robot_command',1,'p_robot_command','parser.py',268),
  ('robot_command -> REFLECT','robot_command',1,'p_robot_command','parser.py',269),
  ('robot_command -> DRILL','robot_command',1,'p_robot_command','parser.py',270),
  ('call -> VARIABLE LBRACKET parameters RBRACKET','call',4,'p_call','parser.py',275),
  ('call -> VARIABLE BRACKETS','call',2,'p_call','parser.py',276),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',284),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','parser.py',289),
  ('parameters -> parameter','parameters',1,'p_parameters','parser.py',290),
  ('parameters -> parameters CONTINUE','parameters',2,'p_parameters','parser.py',291),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',301),
  ('parameter -> VARIABLE EQ expression','parameter',3,'p_parameter','parser.py',302),
  ('errors -> errors error','errors',2,'p_errors','parser.py',310),
  ('errors -> error','errors',1,'p_errors','parser.py',311),
]
